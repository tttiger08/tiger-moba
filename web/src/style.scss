//样式重置
* {
    box-sizing: border-box;
    outline: none;
}

html {
    // font-size: 13px !important; 
    font-size: 13px;
}

body {
    margin: 0;
    font-family: Arial, Helvetica, sans-serif;
    line-height: 1.2rem;
    background: #f1f1f1;

    a {
        color: #999;
    }
}

//color
$colors: ('primary': #db9e3f,
    'info': #4b67af,
    'danger': #791a15,
    'blue-1': #1f3695,
    'blue': #4394e4,
    'white': #fff,
    'white-1': #fcfcfc,
    'white-2': #eceef0,
    'light': #f9f9f9,
    'light-1': #d4d9de,
    'grey': #999,
    'grey-1': #666,
    'dark-1': #343440,
    'dark': #222,
    'black': #000,
);

//text color
@each $colorKey,
$color in $colors {
    .text-#{$colorKey} {
        color: $color;
    }

    .bg-#{$colorKey} {
        background-color: $color;
    }
}

//text align
@each $var in (left, center, right) {
    .text-#{$var} {
        text-align: $var;
    }
}

//font size
$base-font-size:1rem;
$font-sizes:(xs:0.7692, //10
    sm:0.9231, //12
    md:1, //13
    lg:1.0769, //14
    xl:1.2308, //16
);

@each $sizeKey,
$size in $font-sizes {
    .text-#{$sizeKey} {
        font-size: $size * $base-font-size;
    }
}

// width, height
.w-100 {
    width: 100%;
}

.h-100 {
    height: 100%;
}

//flex
.d-flex {
    display: flex;
}

.flex-colum {
    flex-direction: column;
}

$flex-jc:(start:flex-start,
    end:flex-end,
    center:center,
    between:space-between,
    around:space-around,
);

@each $key,
$value in $flex-jc {
    .jc-#{$key} {
        justify-content: $value;
    }
}

$flex-ai:(start:flex-start,
    end:flex-end,
    center:center,
    between:space-between,
    stretch:stretch);

@each $key,
$value in $flex-ai {
    .ai-#{$key} {
        align-items: $value;
    }
}

.flex-1 {
    flex: 1;
}

.flex-grow-1 {
    flex-grow: 1;
}

//spacing
//0-5:0
//.mt-1 => margin-top .pb2
$spacing-types:(m:margin, p:padding);
$spacing-directions:(t:top, r:right, b:bottom, l:left);
$spacing-base-size:1rem;
$spacing-size:(0:0, 1:0.25, 2:0.5, 3:1, 4:1.5, 5:3);


@each $typeKey,
$type in $spacing-types {

    //m-1
    @each $sizeKey,
    $size in $spacing-size {
        .#{$typeKey}-#{$sizeKey} {
            #{$type}: $size*$spacing-base-size;
        }
    }

    //mx-1
    @each $sizeKey,
    $size in $spacing-size {
        .#{$typeKey}x-#{$sizeKey} {
            #{$type}-left: $size*$spacing-base-size;
            #{$type}-right: $size*$spacing-base-size;
        }
    }

    //my-1
    @each $sizeKey,
    $size in $spacing-size {
        .#{$typeKey}y-#{$sizeKey} {
            #{$type}-top: $size*$spacing-base-size;
            #{$type}-bottom: $size*$spacing-base-size;
        }
    }

    //mt-1
    @each $directionKey,
    $direction in $spacing-directions {

        @each $sizeKey,
        $size in $spacing-size {
            .#{$typeKey}#{$directionKey}-#{$sizeKey} {
                #{$type}-#{$direction}: $size*$spacing-base-size;
            }
        }
    }
}

//button
.btn {
    border: none;
    border-radius: 0.1538rem;
    align-items: center;
    font-size: map-get($font-sizes, 'sm') * $base-font-size;
    padding: 0.2rem 0.6rem;

}

//nav
.nav {
    display: flex;

    .nav-item {
        border-bottom: 3px solid transparent;
        padding-bottom: 0.2rem;

        &.active {
            color: map-get($colors, 'primary');
            border-bottom-color: map-get($map: $colors, $key: 'primary');
        }
    }

    &.nav-inverse {
        .nav-item {
            color: map-get($map:$colors, $key:'white');

            &.active {
                border-bottom-color: map-get($colors, 'white');
            }
        }
    }

}